@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@model PaginatedList<ZadanieASP1.Models.Trip>
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole("Admin") || User.IsInRole("Manager"))
{
    <p>
        <a asp-action="create" class="btn btn-success btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-plus"></i>
            </span>
            <span class="text">Create New</span>
        </a>
    </p>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="searchBtn" /> |
    <a class="btn btn-secondary btn-icon-split" asp-action="Index">
        <span class="icon text-white-50">
            <i class="fas fa-arrow-left"></i>
        </span>
        <span class="text">Back to list</span>
    </a>
        </p>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Title)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Description)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Price)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TripDate)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Duration)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.TripDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Duration)</td>

                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <td style="display: flex; justify-content: center; align-items: center; gap: 25px; border: none;">
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.TripID">Edit</a>
                            <a class="btn btn-info" asp-action="Details" asp-route-id="@item.TripID">Details</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.TripID">Delete</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a class="btn btn-info" asp-action="Details" asp-route-id="@item.TripID">Details</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>




@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="prevBtn @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="nextBtn @nextDisabled">
    Next
</a>
